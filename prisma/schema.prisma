// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id               String   @id @default(uuid())
  nickname         String?
  name             String?
  email            String   @unique
  imageUrl         String?
  scoreRank        Int?
  achievementsRank Int?
  CCCount          Int?
  admin            Boolean?
  supporter        Boolean?
  joindate         DateTime @default(now())
  discord          String?
  favoriteGame     Games?
  bio              String?  @db.VarChar(250)
  totalPoints      Int?
  totalScore       Int?
  eventPoints      Int?
  hashedPassword   String?
  profileBanner    String?
  Replays          Replay[]
  pointsRank       Ranking?
}

model Replay {
  replayId     String        @id @default(cuid())
  player       String?
  character    String?
  rank         String?
  shottype     String?
  stage        String?
  stage_score  String?
  game         Int?
  date         String?
  rpy_name     String?
  points       Int?
  scorePoints  Int?
  acceptedBy   String?
  filePath     String?
  comment      String?
  hash         String?       @unique
  uploadedDate DateTime?     @default(now())
  achievement  Achievement?
  status       ReplayStatus?

  Profile Profile? @relation(fields: [userId], references: [id])
  userId  String?

  @@index([userId])
}

// example:  "EASY/9999.9999.9999/123+NORMAL/9999.9999.9999/345+HARD/9999.9999.9999/677+LUNATIC/9999.9999.9999/444";
// use parseScoreString function to get ScoreObject type
model Ranking {
  EOSD    String
  PCB     String
  IN      String
  INA     String
  INB     String
  POFV    String
  MOF     String
  SA      String
  UFO     String
  GFW     String
  TD      String
  DDC     String
  LOLK    String
  HSIFS   String
  WBAWC   String
  UM      String
  UDOALG  String
  userId  String  @unique
  profile Profile @relation(fields: [userId], references: [id])
}

model RnakingScore {
  user String @unique

  score Int
}

enum ReplayStatus {
  NEW
  VERIFIED
  REJECTED
}

enum Achievement {
  CC
  NM
  NB
  NMNB
  NNN
  NNNN
}

enum Games {
  EOSD
  PCB
  IN
  INA
  INB
  POFV
  MOF
  SA
  UFO
  GFW
  TD
  DDC
  LOLK
  HSIFS
  WBAWC
  UM
  UDOALG
}
