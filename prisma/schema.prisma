// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id             String     @id @unique @default(uuid())
  nickname       String?
  name           String?
  email          String     @unique
  imageUrl       String?
  CCCount        Int?       @default(0)
  admin          Boolean?
  supporter      Boolean?
  joindate       DateTime   @default(now())
  discord        String?
  favoriteGame   String?
  bio            String?    @db.VarChar(250)
  points         Int?       @default(0)
  CCTable        Ranking?
  event          Int?       @default(0)
  hashedPassword String?
  profileBanner  String?
  Replays        Replay[]
  MainPage       MainPage[]
}

// example:  "EASY/9999.9999.9999/123+NORMAL/9999.9999.9999/345+HARD/9999.9999.9999/677+LUNATIC/9999.9999.9999/444";
// use parseScoreString function to get ScoreObject type
// DIFF/SCORE/ID/CC
model Ranking {
  EOSD                String?  @db.Text
  PCB                 String?  @db.Text
  IN                  String?  @db.Text
  POFV                String?  @db.Text
  MOF                 String?  @db.Text
  SA                  String?  @db.Text
  UFO                 String?  @db.Text
  GFW                 String?  @db.Text
  TD                  String?  @db.Text
  DDC                 String?  @db.Text
  LOLK                String?  @db.Text
  HSIFS               String?  @db.Text
  WBAWC               String?  @db.Text
  UM                  String?  @db.Text
  userIdRankingPoints String   @unique
  Profile             Profile? @relation(fields: [userIdRankingPoints], references: [id])
}

model Replay {
  replayId     String        @id @default(cuid())
  player       String?
  character    String?
  rank         String?
  shottype     String?
  stage        String?
  stage_score  String?
  score        Int?
  game         Int?
  date         String?
  rpy_name     String?
  slowRate     String?
  points       Int?
  videoLink    String?
  acceptedBy   String?
  filePath     String?
  comment      String?
  uploadedDate DateTime?     @default(now())
  fileDate     DateTime?
  achievement  Int?
  status       ReplayStatus?

  userId  String?
  Profile Profile? @relation(fields: [userId], references: [id])

  @@index([userId])
}

model MainPage {
  id         String   @unique @default(uuid())
  event      Event?
  background String?
  latestUser Profile? @relation(fields: [profileId], references: [id])
  profileId  String?

  @@index([profileId])
}

model Event {
  eventID    String   @default(uuid())
  eventName  String
  mainPageId String   @unique
  page       MainPage @relation(fields: [mainPageId], references: [id])
}

enum ReplayStatus {
  UNVERIFIED
  VERIFIED
  REJECTED
}

enum Achievement {
  CC
  NM
  NB
  NMNB
  NNN
  NNNN
}
